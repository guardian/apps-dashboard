{
    "project": {
        "name": "itunesconnect",
        "description": "node.js iTunes Connect Reporting module.",
        "version": "0.0.1",
        "url": "https://github.com/stoprocent/node-itunesconnect"
    },
    "files": {
        "bin/cli.js": {
            "name": "bin/cli.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "index.js": {
            "name": "index.js",
            "modules": {
                "itunesconnect": 1
            },
            "classes": {
                "Connect": 1,
                "Report": 1,
                "Query": 1
            },
            "fors": {
                "Connect": 1,
                "Report": 1,
                "Query": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "itunesconnect": {
            "name": "itunesconnect",
            "submodules": {},
            "classes": {
                "Connect": 1,
                "Report": 1,
                "Query": 1
            },
            "fors": {
                "Connect": 1,
                "Report": 1,
                "Query": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "index.js",
            "line": 441
        }
    },
    "classes": {
        "Connect": {
            "name": "Connect",
            "shortname": "Connect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "itunesconnect",
            "namespace": "",
            "file": "index.js",
            "line": 76,
            "description": "Initialize a new `Connect` with the given `username`, `password` and `options`.\n\nExamples:\n\n\t// Import itc-report\n\tvar itc \t= require(\"itunesconnect\"),\n\t\tReport  = itc.Report;\n\t\n\t// Init new iTunes Connect\n\tvar itunes = new itc.Connect('apple@id.com', 'password');\n\n\t// Init new iTunes Connect\n\tvar itunes = new itc.Connect('apple@id.com', 'password', {\n\t\terrorCallback: function(error) {\n\t\t\tconsole.log(error);\n\t\t},\n\t\tconcurrentRequests: 1\n\t});",
            "is_constructor": 1,
            "params": [
                {
                    "name": "username",
                    "description": "Apple ID login",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "Apple ID password",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "baseURL",
                            "description": "iTunes Connect Login URL",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "apiURL",
                            "description": "iTunes Connect API URL",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "concurrentRequests",
                            "description": "Number of concurrent requests",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "cookies",
                            "description": "Cookies array. If you provide cookies array it will not login and use this instead.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "errorCallback",
                            "description": "Error callback function called when requests are failing",
                            "type": "Function",
                            "optional": true,
                            "props": [
                                {
                                    "name": "error",
                                    "description": "Login error",
                                    "type": "Function",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "loginCallback",
                            "description": "Login callback function called when login to iTunes Connect was a success.",
                            "type": "Function",
                            "optional": true,
                            "props": [
                                {
                                    "name": "cookies",
                                    "description": "cookies are passed as a first argument. You can get it and cache it for later.",
                                    "type": "Function",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "Report": {
            "name": "Report",
            "shortname": "Report",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "itunesconnect",
            "namespace": "",
            "file": "index.js",
            "line": 304,
            "description": "Initialize a new `Query` with the given `type` and `config`.\n\nExamples:\n\n\t// Import itc-report\n\tvar itc \t= require(\"itunesconnect\"),\n\t\tReport  = itc.Report;\n\t\n\t// Init new iTunes Connect\n\tvar itunes = new itc.Connect('apple@id.com', 'password');\n\n\t// Timed type query\n\tvar query = Report('timed');\n\t\n\t// Ranked type query with config object\n\tvar query = Report('ranked', { limit: 100 });\t\n\n\t// Advanced Example\n\tvar advancedQuery = Report('timed', {\n\t\tstart \t: '2014-04-08',\n\t\tend \t: '2014-04-25',\n\t\tlimit \t: 100,\n\t\tfilters : {\n\t\t\tcontent: [{AppID}, {AppID}, {AppID}],\n\t\t\tlocation: [{LocationID}, {LocationID}],\n\t\t\ttransaction: itc.transaction.free,\n\t\t\ttype: [\n\t\t\t\titc.type.inapp, \n\t\t\t\titc.type.app\n\t\t\t],\n\t\t\tcategory: {CategoryID}\n\t\t},\n\t\tgroup: 'content'\n\t});",
            "is_constructor": 1,
            "params": [
                {
                    "name": "<type>",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "start",
                            "description": "Date or if String must be in format YYYY-MM-DD",
                            "type": "String|Date",
                            "optional": true
                        },
                        {
                            "name": "end",
                            "description": "Date or if String must be in format YYYY-MM-DD",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "interval",
                            "description": "One of the following:",
                            "type": "String",
                            "optional": true,
                            "props": [
                                {
                                    "name": "day",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "week",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "month",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "quarter",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "year",
                                    "description": "",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "filters",
                            "description": "Possible keys:",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "content",
                                    "description": "",
                                    "type": "Number|Array",
                                    "optional": true
                                },
                                {
                                    "name": "type",
                                    "description": "",
                                    "type": "String|Array",
                                    "optional": true
                                },
                                {
                                    "name": "transaction",
                                    "description": "",
                                    "type": "String|Array",
                                    "optional": true
                                },
                                {
                                    "name": "category",
                                    "description": "",
                                    "type": "Number|Array",
                                    "optional": true
                                },
                                {
                                    "name": "platform",
                                    "description": "",
                                    "type": "String|Array",
                                    "optional": true
                                },
                                {
                                    "name": "location",
                                    "description": "",
                                    "type": "Number|Array",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "group",
                            "description": "One of following:",
                            "type": "String",
                            "optional": true,
                            "props": [
                                {
                                    "name": "content",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "type",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "transaction",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "category",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "platform",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "location",
                                    "description": "",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "measures",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Query"
            }
        },
        "Query": {
            "name": "Query",
            "shortname": "Query",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "itunesconnect",
            "namespace": "",
            "file": "index.js",
            "line": 441,
            "description": "Initialize a new `Query` with the given `query`.\n\nConstants to use with Query\n\n\t// Import itc-report\n\tvar itc = require(\"itunesconnect\"),\n\t\n\t// Types\n\titc.type.inapp \n\titc.type.app \n\t\n\t// Transactions\n\titc.transaction.free\n\titc.transaction.paid\n\titc.transaction.redownload\n\titc.transaction.update\n\titc.transaction.refund\n\t\n\t// Platforms\n\titc.platform.desktop\n\titc.platform.iphone\n\titc.platform.ipad\n\titc.platform.ipod\n\t\n\t// Measures\n\titc.measure.proceeds\n\titc.measure.units",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Query"
            }
        }
    },
    "classitems": [
        {
            "file": "bin/cli.js",
            "line": 3,
            "description": "Script dependencies.",
            "class": "Connect"
        },
        {
            "file": "bin/cli.js",
            "line": 15,
            "description": "Options helpers",
            "class": "Connect"
        },
        {
            "file": "bin/cli.js",
            "line": 119,
            "description": "Config base",
            "class": "Connect"
        },
        {
            "file": "bin/cli.js",
            "line": 127,
            "description": "Config File Template",
            "class": "Connect"
        },
        {
            "file": "bin/cli.js",
            "line": 148,
            "description": "Setup program",
            "class": "Connect"
        },
        {
            "file": "index.js",
            "line": 144,
            "description": "Request iTunes Connect report with the given `query` and `completed` callback.\n\nExamples:\n\n\t// Import itc-report\n\tvar itc \t= require(\"itunesconnect\"),\n\t\tReport  = itc.Report;\n\t\n\t// Init new iTunes Connect\n\tvar itunes = new itc.Connect('apple@id.com', 'password');\n\n\t// Request timed report from yesterday to today\n\titunes.request(Report.timed().time(1, 'day'), function(error, result) {\n\t\tconsole.log(result);\n\t})",
            "itemtype": "method",
            "name": "request",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "Query"
                },
                {
                    "name": "completed",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "Just an error if occure",
                            "type": "Error"
                        },
                        {
                            "name": "result",
                            "description": "Report result",
                            "type": "Object"
                        },
                        {
                            "name": "query",
                            "description": "Query that was sent",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Connect",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 181,
            "description": "Fetch iTunes Connect Reporting metadata with given `completed` callback.\n\nExamples:\n\n\t// Import itc-report\n\tvar itc \t= require(\"itunesconnect\"),\n\t\tReport  = itc.Report;\n\t\n\t// Init new iTunes Connect\n\tvar itunes = new itc.Connect('apple@id.com', 'password');\n\n\t// Fetch API Metadata\n\titunes.metadata(function(error, result) {\n\t\tconsole.log(result);\n\t})",
            "itemtype": "method",
            "name": "metadata",
            "params": [
                {
                    "name": "completed",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "Just an error if occure",
                            "type": "Error"
                        },
                        {
                            "name": "result",
                            "description": "Metadata result",
                            "type": "Object"
                        },
                        {
                            "name": "query",
                            "description": "Query that was sent",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Connect",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 215,
            "description": "Execute iTunes Connect report request with given `task` and `callback`.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "executeRequest",
            "params": [
                {
                    "name": "task",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Connect",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 258,
            "description": "Login to iTunes Connect with given `username` and `password`.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "username",
                    "description": "Apple ID login",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "Apple ID password",
                    "type": "String"
                }
            ],
            "class": "Connect",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 379,
            "description": "Initialize a new `Query` with the ranked type and given `config`.\n\nExamples:\n\n\t// Import itc-report\n\tvar itc \t= require(\"itunesconnect\"),\n\t\tReport  = itc.Report;\n\t\n\t// Init new iTunes Connect\n\tvar itunes = new itc.Connect('apple@id.com', 'password');\n\n\t// Ranked type query\n\tvar query = Report.ranked();\n\n\t// Another query\n\tvar otherQuery = Report.ranked({\n\t\tlimit: 10\n\t});",
            "itemtype": "method",
            "name": "ranked",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Query"
            },
            "class": "Report",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 410,
            "description": "Initialize a new `Query` with the timed type and given `config`.\n\nExamples:\n\n\t// Import itc-report\n\tvar itc \t\t= require(\"itunesconnect\"),\n\t\tReport   \t= itc.Report;\n\t\n\t// Init new iTunes Connect\n\tvar itunes = new itc.Connect('apple@id.com', 'password');\n\n\t// Timed type query\n\tvar query = Report.timed();\n\n\t// Another query\n\tvar otherQuery = Report.timed({\n\t\tlimit: 10\n\t});",
            "itemtype": "method",
            "name": "timed",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Query"
            },
            "class": "Report",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 497,
            "description": "Builds and returns body for Connect request as JSON string",
            "itemtype": "method",
            "name": "body",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "JSON String",
                "type": "String"
            },
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 532,
            "description": "Initialize a new `Query` with the timed type.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "timed",
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 552,
            "description": "Initialize a new `Query` with the ranked type.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "ranked",
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 572,
            "description": "Sets interval property for `Query`",
            "itemtype": "method",
            "name": "interval",
            "params": [
                {
                    "name": "value",
                    "description": "One of the following:",
                    "type": "String",
                    "props": [
                        {
                            "name": "day",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "week",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "month",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "quarter",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "year",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 591,
            "description": "Sets start and end property for `Query`\n\nExamples:\n\n\t// Start and end date set manualy\n\tquery.date('2014-04-08', new Date());\n\n\t// Start and end date will be todays date\n\tquery.date(new Date());\n\n\t// Start and end date will be set as 8th of April 2014\n\tquery.date('2014-04-08');",
            "itemtype": "method",
            "name": "date",
            "params": [
                {
                    "name": "<start>",
                    "description": "If end is undefined it will be set same as start. If String, must be in format YYYY-MM-DD",
                    "type": "String|Date"
                },
                {
                    "name": "end",
                    "description": "If String, must be in format YYYY-MM-DD",
                    "type": "String|Date",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 621,
            "description": "Sets start property for `Query` in more easy/generic way\n\nExamples:\n\n\tquery.time(1, 'week');\n\tquery.time(20, 'days');",
            "itemtype": "method",
            "name": "time",
            "params": [
                {
                    "name": "<value>",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "<unit>",
                    "description": "day, week, month, etc...",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 641,
            "description": "Sets `group by` property for `Query`",
            "itemtype": "method",
            "name": "group",
            "params": [
                {
                    "name": "value",
                    "description": "One of following:",
                    "type": "String",
                    "props": [
                        {
                            "name": "content",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "transaction",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "category",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "platform",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "location",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 661,
            "description": "Sets measures property for `Query`",
            "itemtype": "method",
            "name": "measures",
            "params": [
                {
                    "name": "<value>",
                    "description": "",
                    "type": "String|Array"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 675,
            "description": "Sets limit property for `Query`",
            "itemtype": "method",
            "name": "limit",
            "params": [
                {
                    "name": "<value>",
                    "description": "Not sure if Apple is using limit in ranked type query",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 689,
            "description": "Sets content filter for `Query`",
            "itemtype": "method",
            "name": "content",
            "params": [
                {
                    "name": "<value>",
                    "description": "AppStore ID",
                    "type": "Number|Array"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 713,
            "description": "Sets category filter for `Query`\n\nExamples:\n\n\t// Import itc-report\n\tvar itc \t= require(\"itunesconnect\"),\n\t\tReport  = itc.Report;\n\t\n\t// Query\n\tvar query = Report.timed({\n\t\tlimit: 10\n\t}).category(6001);\t\n\n\t// Another Query\n\tvar otherQuery = Report.timed({\n\t\tlimit: 10\n\t});\n\t\n\t// \n\totherQuery.category([6001, 6002, 6003]);\n\totherQuery.category([6004, 6005, 6006]).category(6007);",
            "itemtype": "method",
            "name": "category",
            "params": [
                {
                    "name": "<value>",
                    "description": "Visit https://github.com/stoprocent/itc-report/wiki/Cheet-Sheet#categories for available options",
                    "type": "Number|Array"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 757,
            "description": "Sets location filter for `Query`",
            "itemtype": "method",
            "name": "location",
            "params": [
                {
                    "name": "<value>",
                    "description": "Visit https://github.com/stoprocent/itc-report/wiki/Cheet-Sheet#countries for available options",
                    "type": "Number|Array"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 781,
            "description": "Sets platform filter for `Query`",
            "itemtype": "method",
            "name": "platform",
            "params": [
                {
                    "name": "<value>",
                    "description": "(Look in Constants under Platforms)",
                    "type": "String|Array"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 805,
            "description": "Sets type filter for `Query`",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "<value>",
                    "description": "(Look in Constants under Types)",
                    "type": "String|Array"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        },
        {
            "file": "index.js",
            "line": 829,
            "description": "Sets transaction filter for `Query`",
            "itemtype": "method",
            "name": "transaction",
            "params": [
                {
                    "name": "<value>",
                    "description": "(Look in Constants under Transactions)",
                    "type": "String|Array"
                }
            ],
            "chainable": 1,
            "class": "Query",
            "module": "itunesconnect"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nScript dependencies.",
            "line": " bin/cli.js:3"
        },
        {
            "message": "Missing item type\nOptions helpers",
            "line": " bin/cli.js:15"
        },
        {
            "message": "Missing item type\nConfig base",
            "line": " bin/cli.js:119"
        },
        {
            "message": "Missing item type\nConfig File Template",
            "line": " bin/cli.js:127"
        },
        {
            "message": "Missing item type\nSetup program",
            "line": " bin/cli.js:148"
        }
    ]
}